#!/usr/bin/perl
use strict;
use warnings;
use Term::ANSIColor;

# Ensure a command was provided
if (@ARGV < 1) {
    print "Usage: $0 's/search/replace/flags' [file...]\n";
    exit 1;
}

# Extract the command from the arguments
my $command = shift @ARGV;

# Parse the search and replace patterns
my ($search, $replace, $flags) = $command =~ m{s/(.*?)/(.*?)/(.*)};

# Create the colored replace pattern
my $colored_replace = color("RED") . $replace . color("RESET");

# Replace the replace pattern in the command with the colored version
(my $colored_command = $command) =~ s{$replace}{$colored_replace};

# Read from files provided as arguments, or STDIN if no files were provided
while (<>) {
    print "\nFile: $ARGV\n" if $. == 1;
    my $orig = $_;
    if (eval $colored_command) {
        print "$.: $orig";
        print "$.: $_";
    }

    close ARGV if eof;
}

